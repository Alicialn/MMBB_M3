var jsPsychExtensionDeviceMotion=function(){"use strict";function t(t,e,i,n){return new(i||(i=Promise))((function(r,s){function o(t){try{c(n.next(t))}catch(t){s(t)}}function a(t){try{c(n.throw(t))}catch(t){s(t)}}function c(t){var e;t.done?r(t.value):(e=t.value,e instanceof i?e:new i((function(t){t(e)}))).then(o,a)}c((n=n.apply(t,e||[])).next())}))}class e{constructor(e){this.jsPsych=e,this.initialize=()=>t(this,void 0,void 0,(function*(){this.domObserver=new MutationObserver(this.mutationObserverCallback)})),this.on_start=t=>{t=t||{},this.currentTrialData=[],this.currentTrialTargets=new Map,this.currentTrialSelectors=t.targets||[],this.lastSampleTime=null,this.eventsToTrack=t.events||["devicemotion"],this.domObserver.observe(this.jsPsych.getDisplayElement(),{childList:!0})},this.on_load=()=>{this.currentTrialStartTime=performance.now(),this.eventsToTrack.includes("devicemotion")&&window.addEventListener("devicemotion",this.deviceMotionEventHandler,!0)},this.on_finish=()=>(this.domObserver.disconnect(),this.eventsToTrack.includes("devicemotion")&&window.removeEventListener("devicemotion",this.deviceMotionEventHandler,!0),{device_motion_data:this.currentTrialData}),this.deviceMotionEventHandler=t=>{const e=performance.now(),i=Math.round(e-this.currentTrialStartTime);var n=t.acceleration.x,r=t.acceleration.y,s=t.acceleration.z,o=t.interval;this.lastSampleTime=e,this.currentTrialData.push({x:n,y:r,z:s,interval:o,t:i,event:"devicemotion"})},this.mutationObserverCallback=(t,e)=>{for(const t of this.currentTrialSelectors)if(!this.currentTrialTargets.has(t)){const e=this.jsPsych.getDisplayElement().querySelector(t);e&&this.currentTrialTargets.set(t,e.getBoundingClientRect())}}}}return e.info={name:"device-motion-tracking"},e}();
//# sourceMappingURL=index.browser.min.js.map
